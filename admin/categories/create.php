<?php
require_once "./Controller/DatabaseController.php";
require_once "./Controller/CategoriesController.php";

$db = DatabaseController::getInstance();
$conn = $db->getConnect();
$categories = new CategoriesController($conn);

$errors = [];
$success = false;

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
  $name = trim($_POST['name'] ?? '');
  $slug = trim($_POST['slug'] ?? ''); // Get optional slug

  if (empty($name)) {
    $errors[] = "Название категории обязательно";
  }

  if (empty($errors)) {
    try {
      // Pass slug as second parameter if it's provided
      $result = empty($slug) ? $categories->createCategories($name) : $categories->createCategories($name, $slug);
      $success = true;
      $_POST = [];
    } catch (Exception $e) {
      $errors[] = "Ошибка при создании категории: " . $e->getMessage();
    }
  }
}

$titleName = "Добавление категории";
include "layout/head.php";
?>

<main>
  <?php include "admin/layout/sidebar.php"; ?>
  <div class="p-4 sm:ml-64 mt-16">
    <div class="mb-6">
      <h1 class="text-2xl font-semibold text-gray-900">Добавление категории</h1>
      <p class="mt-1 text-sm text-gray-600">Создайте новую категорию для ваших статей</p>
    </div>

    <?php if ($success): ?>
      <div class="mb-4 p-4 bg-green-100 border border-green-400 text-green-700 rounded">
        Категория успешно создана! <a href="/admin/categories" class="underline">Вернуться к списку</a>
      </div>
    <?php endif; ?>

    <?php if (!empty($errors)): ?>
      <div class="mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded">
        <ul class="list-disc list-inside">
          <?php foreach ($errors as $error): ?>
            <li><?= $error ?></li>
          <?php endforeach; ?>
        </ul>
      </div>
    <?php endif; ?>

    <div class="bg-white rounded-lg shadow p-6">
      <form method="POST" action="/admin/categories/create">
        <div class="mb-4">
          <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Название категории</label>
          <input type="text" id="name" name="name" value="<?= htmlspecialchars($_POST['name'] ?? '') ?>"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
          <p class="mt-1 text-sm text-gray-500">Название категории, которое будет отображаться на сайте</p>
        </div>

        <div class="mb-4">
          <label for="slug" class="block text-sm font-medium text-gray-700 mb-1">URL категории (slug)</label>
          <input type="text" id="slug" name="slug" value="<?= htmlspecialchars($_POST['slug'] ?? '') ?>"
            class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
          <p class="mt-1 text-sm text-gray-500">Оставьте пустым для автоматической генерации из названия</p>
        </div>

        <div class="flex gap-3">
          <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
            Создать категорию
          </button>
          <a href="/admin/categories" class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors">
            Отмена
          </a>
        </div>
      </form>
    </div>
  </div>
</main>

<script>
  document.getElementById('name').addEventListener('input', function() {
    const nameField = this;
    const slugField = document.getElementById('slug');

    if (!slugField.value || slugField.dataset.autoGenerated === 'true') {
      const slug = nameField.value.toLowerCase()
        .replace(/[^\w\s-]/g, '')
        .replace(/\s+/g, '-')
        .replace(/-+/g, '-');

      slugField.value = slug;
      slugField.dataset.autoGenerated = 'true';
    }
  });

  document.getElementById('slug').addEventListener('input', function() {
    this.dataset.autoGenerated = 'false';
  });
</script>

<?php include "./layout/footer.php"; ?>